{
  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "search.exclude": {
    "pnpm-lock.yaml": true,
    "node_modules": true,
    ".next": true,
    "CHANGELOG.md": true,
    ".gitignore": true,
    "**.env.**": true,
    ".node-version": true,
    ".npmrc": true,
    "LICENSE": true,
    "commitlint.config.cjs": true,
    "lint-staged.config.js": true,
    "eslint.config.mjs": true,
    "release.config.mjs": true,
    "vitest.setup.mjs": true,
    "env.d.ts": true,
    "globals.d.ts": true,
    "next-env.d.ts": true,
    "next.config.ts": true,
    "playwright.config.ts": true,
    "reset.d.ts": true,
    "vitest.config.ts": true,
    "tsconfig.json": true,
    "**/.vscode/**": true,
    "cli/**": true
  },
  "editor.fontFamily": "Fira Code",
  "editor.fontWeight": "500",
  "editor.fontLigatures": true,
  "workbench.iconTheme": "material-icon-theme",
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "editor.wordWrap": "on",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.importModuleSpecifier": "non-relative",
  // TypeScript
  "typescript.tsdk": "node_modules/typescript/lib", // Use the workspace version of TypeScript
  "typescript.enablePromptUseWorkspaceTsdk": true, // For security reasons it's require that users opt into using the workspace version of typescript
  "typescript.preferences.autoImportSpecifierExcludeRegexes": [
    // useRouter should be imported from `next/navigation` instead of `next/router`
    "next/router",
    // By using the Anchor component from Mantine, you get the benefits of Mantine, Next.js, and Next-Intl at the same time.
    "next/link",
    "next/dist/client/link",
    // By using the Image component from Mantine, you get the benefits of Mantine and Next.js at the same time.
    "next/image",
    "next/dist/client/image-component",
    "next/dist/shared/lib/image-external"
  ],
  "typescript.preferences.preferTypeOnlyAutoImports": true, // Prefer type-only imports
  // Vitest
  "testing.automaticallyOpenTestResults": "neverOpen", // Don't open the test results automatically
  // I18n
  "i18n-ally.localesPaths": [
    "src/config/i18n/messages"
  ],

  "tailwindCSS.classAttributes": ["classNames", "className"],
  "i18n-ally.keystyle": "nested",
  // Disable the default formatter, use ESLint instead
  "prettier.enable": false,
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  // Auto fix with ESLint on save
  "editor.codeActionsOnSave": {
    "source.addMissingImports": "explicit",
    "source.fixAll.eslint": "always"
  },
  "eslint.enable": true,
  "eslint.probe": [
    "astro",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "html",
    "mdx",
    "vue",
    "markdown",
    "json",
    "jsonc"
  ],
  // Enable eslint for all supported languages
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "yaml",
    "toml",
    "xml",
    "gql",
    "graphql",
    "astro",
    "svelte",
    "css",
    "less",
    "scss",
    "pcss",
    "postcss",
    "github-actions-workflow"
  ],
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "cssVariables.lookupFiles": [
    "**/*.css",
    "**/*.scss",
    "**/*.sass",
    "**/*.less",
    "node_modules/@mantine/core/styles.css"
  ],
  "cSpell.words": [
    "breakline",
    "navigations"
  ]
}
